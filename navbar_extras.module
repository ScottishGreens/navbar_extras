<?php

/**
 * @file
 * Main file for NavBar extras module.
 */

/**
 * Implements hook_menu().
 */
function navbar_extras_menu() {
  $items = array();

  $items['admin/config/user-interface/navbar'] = array(
    'title'            => 'Navbar',
    'description'      => 'Configuration options for navbar',
    'access arguments' => array('administer navbar'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('navbar_extras_settings_form'),
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function navbar_extras_permission() {
  $return = array();

  $return['administer navbar'] = array(
    'title'       => t('Administer navbar'),
    'description' => t('Administer configuration for navbar module'),
  );

  return $return;
}

/**
 * Implements hook_navbar().
 */
function navbar_extras_navbar() {
  $items = array();

  // Devel menu.
  if (module_exists('devel') && user_access('access devel information')) {
    $tree = menu_tree_all_data('devel');
    $items['devel'] = array(
      '#type' => 'navbar_item',
      'tab' => array(
        '#type' => 'link',
        '#title' => t('Devel'),
        '#href' => 'devel/settings',
        '#options' => array(
          'attributes' => array(
            'title' => t('Development'),
            'class' => array('navbar-icon', 'navbar-icon-devel', 'navbar-tab'),
          ),
        ),
      ),
      'tray' => array(
        '#heading' => t('Development'),
        'development_menu' => menu_tree_output($tree),
      ),
      '#weight' => 50,
    );
  }

  // Content creation menu.
  $node_add_link = menu_get_item('node/add');
  if ($node_add_link['access']) {
    // Use system_admin_menu_block() instead of fetching all content types to get
    // all sub-paths, because some modules can add own links under node/add,
    // which are not node creation pages in fact, for example, panopoly_pages.
    $content = system_admin_menu_block($node_add_link);
    $menu_tree = array();
    foreach ($content as $key => $item) {
      $item['in_active_trail'] = FALSE;
      $menu_tree[$key] = array('link' => $item, 'below' => array());
    }
    navbar_menu_navigation_links($menu_tree);

    $items['create-content'] = array(
      '#type' => 'navbar_item',
      'tab' => array(
        '#type' => 'link',
        '#title' => t('New'),
        '#href' => 'admin',
        '#options' => array(
          'attributes' => array(
            'title' => t('Content creation menu'),
            'class' => array('navbar-icon', 'navbar-icon-new', 'navbar-tab'),
          ),
        ),
      ),
      'tray' => array(
        '#heading' => t('Content creation menu'),
        'content_creation_menu' => menu_tree_output($menu_tree),
      ),
      '#weight' => -10,
    );

    return $items;
  }
}

/**
 * Implements hook_page_build().
 */
function navbar_extras_page_build(&$page) {
  global $user;
  if ($user->uid == 1 &&
    !variable_get('navbar_admin_display', 0) &&
    !empty($page['page_top']['navbar'])) {
    $page['page_top']['navbar']['#access'] = FALSE;
  }
}

/**
 * Callback for 'admin/config/user-interface/navbar'.
 */
function navbar_extras_settings_form($form, &$form_state) {
  $form = array();

  $form['navbar_admin_display'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show navbar for admin'),
    '#description' => t('Allows to show/hide navbar for admin user (uid=1).'),
    '#default_value' => variable_get('navbar_admin_display', 1),
  );

  return system_settings_form($form);
}
